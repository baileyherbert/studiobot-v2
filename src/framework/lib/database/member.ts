import { Model } from './model';

export class MemberBucket extends Model {
    protected table = 'members';

    protected primaryKey = {
        id: 'id',
        guildId: 'guild_id'
    };

    protected map = {
        currency: 'currency',
        inventory: 'inventory',
        level: 'level',
        experience: 'experience',
        lastExperienceAwardTime: 'exp_award_time',
        lastDailyRedeemTime: 'redeem_time',
        nameHistory: 'name_history',
        lastfmId: 'lastfm_id',
        birthYear: 'birth_year'
    };

    /**
     * The balance of the member.
     */
    public currency: number = 0;

    /**
     * An array of inventory items the user owns.
     */
    public inventory: InventoryItem[] = [];

    /**
     * The current level of the member.
     */
    public level: number = 1;

    /**
     * The current experience points of the member.
     */
    public experience: number = 0;

    /**
     * The last time (in milliseconds) that experience was awarded for posting a message.
     */
    public lastExperienceAwardTime: number = 0;

    /**
     * The last time (in milliseconds) that the user redeemed free daily currency.
     */
    public lastDailyRedeemTime: number = 0;

    /**
     * An array of the member's known name changes.
     */
    public nameHistory: NameRecord[] = [];

    /**
     * The lastfm username of the member.
     */
    public lastfmId?: string;

    /**
     * The birth year of the member (generated by the `!rip` command).
     */
    public birthYear?: number;

    /**
     * Constructs a new member.
     */
    constructor(protected id: string, protected guildId: string) {
        super();
    }
}

export type InventoryItem = {
    item: number;
    amount: number;
}

export type NameRecord = {
    name: string;
    time: number;
}

export type MemberRow = {
    id: string;
    guild_id: string;
    settings?: string;
}

